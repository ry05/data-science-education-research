arrange(dept_cat)
test_means_k <- df_dept %>%
kruskal_test(gds_score ~ dept_cat)
test_means_k
eff_size <- df_dept %>%
kruskal_effsize(gds_score ~ dept_cat)
test_means <- df_dept %>%
dunn_test(gds_score ~ dept_cat,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "dept_cat")
test_means
eff_size
p2 <- ggviolin(df_dept, x = "dept_cat", y = "gds_score",
fill = "dept_cat", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
p1 / p2
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject)
temp <- df %>%
filter(country == "India")
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject)
test_means_k <- df_sub %>%
kruskal_test(gds_score ~ subject)
test_means_k
eff_size <- df_sub %>%
kruskal_effsize(gds_score ~ subject)
test_means <- df_sub %>%
dunn_test(gds_score ~ subject,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "subject")
test_means
eff_size
p1 <- ggviolin(df_sub, x = "subject", y = "gds_score",
fill = "subject", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "A. Programs in India",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
temp <- df %>%
filter(country == "USA")
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject)
test_means_k <- df_sub %>%
kruskal_test(gds_score ~ subject)
test_means_k
eff_size <- df_sub %>%
kruskal_effsize(gds_score ~ subject)
test_means <- df_sub %>%
dunn_test(gds_score ~ subject,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "subject")
test_means
eff_size
p2 <- ggviolin(df_sub, x = "subject", y = "gds_score",
fill = "subject", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
(p1 / p2)
p2 <- ggviolin(df_dept, x = "dept_cat", y = "gds_score",
fill = "dept_cat", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
p2 + geom_label()
p2 + geom_text(x=3, y=30, label="Scatter plot")
p2 + geom_text(x="Data-related", y=0.05, label="Scatter plot")
temp <- df %>%
filter(country == "India")
df_dept <- temp %>%
filter(dept_cat %in% c("Engineering-related", "Management-related", "Data-related")) %>%
arrange(dept_cat)
test_means_k <- df_dept %>%
kruskal_test(gds_score ~ dept_cat)
test_means_k
eff_size <- df_dept %>%
kruskal_effsize(gds_score ~ dept_cat)
test_means <- df_dept %>%
dunn_test(gds_score ~ dept_cat,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "dept_cat")
test_means
eff_size
p1 <- ggviolin(df_dept, x = "dept_cat", y = "gds_score",
fill = "dept_cat", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "A. Programs in India",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
) + geom_text(x="Data-related", y=0.05, label="Scatter plot")
temp <- df %>%
filter(country == "USA")
df_dept <- temp %>%
filter(dept_cat %in% c("Engineering-related", "Management-related", "Data-related")) %>%
arrange(dept_cat)
test_means_k <- df_dept %>%
kruskal_test(gds_score ~ dept_cat)
test_means_k
eff_size <- df_dept %>%
kruskal_effsize(gds_score ~ dept_cat)
test_means <- df_dept %>%
dunn_test(gds_score ~ dept_cat,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "dept_cat")
test_means
eff_size
p2 <- ggviolin(df_dept, x = "dept_cat", y = "gds_score",
fill = "dept_cat", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
) + geom_text(x="Data-related", y=0.05, label="Scatter plot")
p1 / p2
p1.axis.ticks
p1.axis.x.ticks
temp <- df %>%
filter(country == "India")
df_dept <- temp %>%
filter(dept_cat %in% c("Engineering-related", "Management-related", "Data-related")) %>%
arrange(dept_cat) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Data-related", "Data-related(7%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Management-related", "Management-related(20%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Engineering-related", "Engineering-related(53%)"))
test_means_k <- df_dept %>%
kruskal_test(gds_score ~ dept_cat)
test_means_k
eff_size <- df_dept %>%
kruskal_effsize(gds_score ~ dept_cat)
test_means <- df_dept %>%
dunn_test(gds_score ~ dept_cat,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "dept_cat")
test_means
eff_size
p1 <- ggviolin(df_dept, x = "dept_cat", y = "gds_score",
fill = "dept_cat", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "A. Programs in India",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
temp <- df %>%
filter(country == "USA")
df_dept <- temp %>%
filter(dept_cat %in% c("Engineering-related", "Management-related", "Data-related")) %>%
arrange(dept_cat) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Data-related", "Data-related(14%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Management-related", "Management-related(25%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Engineering-related", "Engineering-related(26%)"))
test_means_k <- df_dept %>%
kruskal_test(gds_score ~ dept_cat)
test_means_k
eff_size <- df_dept %>%
kruskal_effsize(gds_score ~ dept_cat)
test_means <- df_dept %>%
dunn_test(gds_score ~ dept_cat,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "dept_cat")
test_means
eff_size
p2 <- ggviolin(df_dept, x = "dept_cat", y = "gds_score",
fill = "dept_cat", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
p1 / p2
temp <- df %>%
filter(country == "India")
df_dept <- temp %>%
filter(dept_cat %in% c("Engineering-related", "Management-related", "Data-related")) %>%
arrange(dept_cat) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Data-related", "Data-related (7%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Management-related", "Management-related (20%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Engineering-related", "Engineering-related (53%)"))
test_means_k <- df_dept %>%
kruskal_test(gds_score ~ dept_cat)
test_means_k
eff_size <- df_dept %>%
kruskal_effsize(gds_score ~ dept_cat)
test_means <- df_dept %>%
dunn_test(gds_score ~ dept_cat,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "dept_cat")
test_means
eff_size
p1 <- ggviolin(df_dept, x = "dept_cat", y = "gds_score",
fill = "dept_cat", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "A. Programs in India",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
temp <- df %>%
filter(country == "USA")
df_dept <- temp %>%
filter(dept_cat %in% c("Engineering-related", "Management-related", "Data-related")) %>%
arrange(dept_cat) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Data-related", "Data-related (14%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Management-related", "Management-related (25%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Engineering-related", "Engineering-related (26%)"))
test_means_k <- df_dept %>%
kruskal_test(gds_score ~ dept_cat)
test_means_k
eff_size <- df_dept %>%
kruskal_effsize(gds_score ~ dept_cat)
test_means <- df_dept %>%
dunn_test(gds_score ~ dept_cat,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "dept_cat")
test_means
eff_size
p2 <- ggviolin(df_dept, x = "dept_cat", y = "gds_score",
fill = "dept_cat", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
p1 / p2
temp <- df %>%
filter(country == "India")
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Data Science", "Data Science (20%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Business Analytics", "Business Analytics (20%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Analytics", "Analytics (17%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Artificial Intelligence", "Artificial Intelligence (23%)"))
test_means_k <- df_sub %>%
kruskal_test(gds_score ~ subject)
test_means_k
eff_size <- df_sub %>%
kruskal_effsize(gds_score ~ subject)
test_means <- df_sub %>%
dunn_test(gds_score ~ subject,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "subject")
test_means
eff_size
p1 <- ggviolin(df_sub, x = "subject", y = "gds_score",
fill = "subject", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "A. Programs in India",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
temp <- df %>%
filter(country == "USA")
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Data Science", "Data Science (37%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Business Analytics", "Business Analytics (23%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Analytics", "Analytics (23%)")) %>%
mutate(dept_cat = replace(dept_cat, dept_cat == "Artificial Intelligence", "Artificial Intelligence (7%)"))
test_means_k <- df_sub %>%
kruskal_test(gds_score ~ subject)
test_means_k
eff_size <- df_sub %>%
kruskal_effsize(gds_score ~ subject)
test_means <- df_sub %>%
dunn_test(gds_score ~ subject,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "subject")
test_means
eff_size
p2 <- ggviolin(df_sub, x = "subject", y = "gds_score",
fill = "subject", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
(p1 / p2)
temp <- df %>%
filter(country == "India")
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject) %>%
mutate(subject = replace(subject, subject == "Data Science", "Data Science (20%)")) %>%
mutate(subject = replace(subject, subject == "Business Analytics", "Business Analytics (20%)")) %>%
mutate(subject = replace(subject, subject == "Analytics", "Analytics (17%)")) %>%
mutate(subject = replace(subject, subject == "Artificial Intelligence", "Artificial Intelligence (23%)"))
test_means_k <- df_sub %>%
kruskal_test(gds_score ~ subject)
test_means_k
eff_size <- df_sub %>%
kruskal_effsize(gds_score ~ subject)
test_means <- df_sub %>%
dunn_test(gds_score ~ subject,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "subject")
test_means
eff_size
p1 <- ggviolin(df_sub, x = "subject", y = "gds_score",
fill = "subject", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "A. Programs in India",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
temp <- df %>%
filter(country == "USA")
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject) %>%
mutate(subject = replace(subject, subject == "Data Science", "Data Science (37%)")) %>%
mutate(subject = replace(subject, subject == "Business Analytics", "Business Analytics (23%)")) %>%
mutate(subject = replace(subject, subject == "Analytics", "Analytics (23%)")) %>%
mutate(subject = replace(subject, subject == "Artificial Intelligence", "Artificial Intelligence (7%)"))
test_means_k <- df_sub %>%
kruskal_test(gds_score ~ subject)
test_means_k
eff_size <- df_sub %>%
kruskal_effsize(gds_score ~ subject)
test_means <- df_sub %>%
dunn_test(gds_score ~ subject,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "subject")
test_means
eff_size
p2 <- ggviolin(df_sub, x = "subject", y = "gds_score",
fill = "subject", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
(p1 / p2)
temp <- df %>%
filter(country == "India")
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject) %>%
mutate(subject = replace(subject, subject == "Data Science", "Data Science (20%)")) %>%
mutate(subject = replace(subject, subject == "Business Analytics", "Business Analytics (20%)")) %>%
mutate(subject = replace(subject, subject == "Analytics", "Analytics (17%)")) %>%
mutate(subject = replace(subject, subject == "Artificial Intelligence", "Artificial Intelligence (23%)"))
test_means_k <- df_sub %>%
kruskal_test(gds_score ~ subject)
test_means_k
eff_size <- df_sub %>%
kruskal_effsize(gds_score ~ subject)
test_means <- df_sub %>%
dunn_test(gds_score ~ subject,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "subject")
test_means
eff_size
p1 <- ggviolin(df_sub, x = "subject", y = "gds_score",
fill = "subject", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "A. Programs in India",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
temp <- df %>%
filter(country == "USA")
df_sub <- temp %>%
filter(subject %in% c("Data Science", "Business Analytics", "Analytics", "Artificial Intelligence")) %>%
arrange(subject) %>%
mutate(subject = replace(subject, subject == "Data Science", "Data Science (37%)")) %>%
mutate(subject = replace(subject, subject == "Business Analytics", "Business Analytics (23%)")) %>%
mutate(subject = replace(subject, subject == "Analytics", "Analytics (23%)")) %>%
mutate(subject = replace(subject, subject == "Artificial Intelligence", "Artificial Intelligence (7%)"))
test_means_k <- df_sub %>%
kruskal_test(gds_score ~ subject)
test_means_k
eff_size <- df_sub %>%
kruskal_effsize(gds_score ~ subject)
test_means <- df_sub %>%
dunn_test(gds_score ~ subject,
p.adjust.method = "bonferroni") %>%
add_xy_position(x = "subject")
test_means
eff_size
p2 <- ggviolin(df_sub, x = "subject", y = "gds_score",
fill = "subject", palette=palette,
add = "boxplot", add.params = list(fill = "white")) +
stat_pvalue_manual(test_means, tip.length=0.01, hide.ns = TRUE) +
labs(title = "B. Programs in USA",
subtitle = paste(get_test_label(test_means_k,  detailed = TRUE, type="text"),
", Effect size =", eff_size$magnitude),
x = "",
y = "GDS Score") +
theme(
legend.position = "none",
axis.title = element_text(size = 10),
text = element_text(size = 8)
)
(p1 / p2)
